---
openapi: 3.0.3
info:
  title: Forem API V1
  version: v1
  description: |-
    Access Forem articles, users and other resources via API.
            For a real-world example of Forem in action, check out [DEV](https://www.dev.to).
            All endpoints require an 'api-key' header and a accept header.

            Dates and date times, unless otherwise specified, must be in
            the [RFC 3339](https://tools.ietf.org/html/rfc3339) format.
paths:
  "/api/articles":
    get:
      summary: Published articles
      tags:
      - articles
      description: |-
        This endpoint allows the client to retrieve a list of articles.

        "Articles" are all the posts that users create on DEV that typically
        show up in the feed. They can be a blog post, a discussion question,
        a help thread etc. but is referred to as article within the code.

        By default it will return featured, published articles ordered
        by descending popularity.

        It supports pagination, each page will contain `30` articles by default.
      operationId: getArticles
      parameters:
      - "$ref": "#/components/parameters/pageParam"
      - "$ref": "#/components/parameters/perPageParam30to1000"
      - name: tag
        in: query
        required: false
        description: |-
          Using this parameter will retrieve articles that contain the requested tag. Articles
          will be ordered by descending popularity.This parameter can be used in conjuction with `top`.
        schema:
          type: string
        example: discuss
      - name: tags
        in: query
        required: false
        description: |-
          Using this parameter will retrieve articles with any of the comma-separated tags.
          Articles will be ordered by descending popularity.
        schema:
          type: string
        example: javascript, css
      - name: tags_exclude
        in: query
        required: false
        description: |-
          Using this parameter will retrieve articles that do _not_ contain _any_
          of comma-separated tags. Articles will be ordered by descending popularity.
        schema:
          type: string
        example: node, java
      - name: username
        in: query
        required: false
        description: |-
          Using this parameter will retrieve articles belonging
                      to a User or Organization ordered by descending publication date.
                      If `state=all` the number of items returned will be `1000` instead of the default `30`.
                      This parameter can be used in conjuction with `state`.
        schema:
          type: string
        example: ben
      - name: state
        in: query
        required: false
        description: |-
          Using this parameter will allow the client to check which articles are fresh or rising.
                      If `state=fresh` the server will return fresh articles.
                      If `state=rising` the server will return rising articles.
                      This param can be used in conjuction with `username`, only if set to `all`.
        schema:
          type: string
          enum:
          - fresh
          - rising
          - all
        example: fresh
      - name: top
        in: query
        required: false
        description: |-
          Using this parameter will allow the client to return the most popular articles
          in the last `N` days.
          `top` indicates the number of days since publication of the articles returned.
          This param can be used in conjuction with `tag`.
        schema:
          type: integer
          format: int32
          minimum: 1
        example: 2
      - name: collection_id
        in: query
        required: false
        description: |-
          Adding this will allow the client to return the list of articles
          belonging to the requested collection, ordered by ascending publication date.
        schema:
          type: integer
          format: int32
        example: 99
      responses:
        '200':
          description: A List of Articles
          content:
            application/json:
              example:
              - type_of: article
                id: 10221
                title: Fear and Trembling6
                description: Literally freegan cray celiac tilde. Kale chips yr microdosing
                  biodiesel bicycle rights irony...
                readable_publish_date: Jun 25
                slug: fear-and-trembling6-5255
                path: "/username10/fear-and-trembling6-5255"
                url: http://localhost:3000/username10/fear-and-trembling6-5255
                comments_count: 0
                public_reactions_count: 0
                collection_id:
                published_timestamp: '2022-06-24T15:26:21Z'
                positive_reactions_count: 0
                cover_image: http://localhost:3000/assets/12-f9d673ae4ff98002f782ab82c641f2f26673be728e8f5409bea83f2d1de15323.png
                social_image: http://localhost:3000/assets/12-f9d673ae4ff98002f782ab82c641f2f26673be728e8f5409bea83f2d1de15323.png
                canonical_url: http://localhost:3000/username10/fear-and-trembling6-5255
                created_at: '2022-06-24T15:26:21Z'
                edited_at:
                crossposted_at:
                published_at: '2022-06-24T15:26:21Z'
                last_comment_at: '2022-06-24T15:26:21Z'
                reading_time_minutes: 1
                tag_list:
                - discuss
                tags: discuss
                user:
                  name: Marcos "Whitney" \:/ Hessel
                  username: username10
                  twitter_username: twitter10
                  github_username: github10
                  website_url:
                  profile_image: "/uploads/user/profile_image/24817/5f79859b-1a21-4279-bc37-3796401648db.jpeg"
                  profile_image_90: "/uploads/user/profile_image/24817/5f79859b-1a21-4279-bc37-3796401648db.jpeg"
                organization:
                  name: Will-Auer
                  username: org6
                  slug: org6
                  profile_image: "/uploads/organization/profile_image/4088/71112cb4-2cad-4038-a1ae-6494e7596b8e.png"
                  profile_image_90: "/uploads/organization/profile_image/4088/71112cb4-2cad-4038-a1ae-6494e7596b8e.png"
                flare_tag:
                  name: discuss
                  bg_color_hex: "#000000"
                  text_color_hex: "#ffffff"
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ArticleIndex"
        '401':
          description: unauthorized
servers:
- url: https://dev.to/api
  description: Production server
components:
  parameters:
    pageParam:
      in: query
      name: page
      required: false
      description: Pagination page
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    perPageParam10to1000:
      in: query
      name: per_page
      required: false
      description: Page size (the number of items to return per page)
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 1000
        default: 10
    perPageParam24to1000:
      in: query
      name: per_page
      required: false
      description: Page size (the number of items to return per page)
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 1000
        default: 24
    perPageParam30to1000:
      in: query
      name: per_page
      required: false
      description: Page size (the number of items to return per page)
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 1000
        default: 30
    perPageParam30to100:
      in: query
      name: per_page
      required: false
      description: Page size (the number of items to return per page)
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 30
    perPageParam80to1000:
      in: query
      name: per_page
      required: false
      description: Page size (the number of items to return per page)
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 1000
        default: 80
    listingCategoryParam:
      name: category
      in: query
      description: |-
        Using this parameter will return listings belonging to the
                      requested category.
      schema:
        type: string
      example: cfp
  schemas:
    ArticleFlareTag:
      description: Flare tag of the article
      type: object
      properties:
        name:
          type: string
        bg_color_hex:
          description: Background color (hexadecimal)
          type: string
        text_color_hex:
          description: Text color (hexadecimal)
          type: string
    ArticleIndex:
      description: Resprentation of an article or post returned in a list
      type: object
      properties:
        type_of:
          type: string
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        cover_image:
          type: string
          format: url
          nullable: true
        readable_publish_date:
          type: string
        social_image:
          type: string
          format: url
        tag_list:
          type: array
          items:
            type: string
        tags:
          type: string
        slug:
          type: string
        path:
          type: string
          format: path
        url:
          type: string
          format: url
        canonical_url:
          type: string
          format: url
        positive_reactions_count:
          type: integer
          format: int32
        public_reactions_count:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        edited_at:
          type: string
          format: date-time
          nullable: true
        crossposted_at:
          type: string
          format: date-time
          nullable: true
        published_at:
          type: string
          format: date-time
        last_comment_at:
          type: string
          format: date-time
        published_timestamp:
          description: Crossposting or published date time
          type: string
          format: date-time
        reading_time_minutes:
          description: Reading time, in minutes
          type: integer
          format: int32
        user:
          "$ref": "#/components/schemas/SharedUser"
        flare_tag:
          "$ref": "#/components/schemas/ArticleFlareTag"
        organization:
          "$ref": "#/components/schemas/SharedOrganization"
      required:
      - type_of
      - id
      - title
      - description
      - cover_image
      - readable_publish_date
      - social_image
      - tag_list
      - tags
      - slug
      - path
      - url
      - canonical_url
      - comments_count
      - positive_reactions_count
      - public_reactions_count
      - created_at
      - edited_at
      - crossposted_at
      - published_at
      - last_comment_at
      - published_timestamp
      - user
      - reading_time_minutes
    SharedUser:
      description: The resource creator
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        twitter_username:
          type: string
          nullable: true
        github_username:
          type: string
          nullable: true
        website_url:
          type: string
          format: url
          nullable: true
        profile_image:
          description: Profile image (640x640)
          type: string
        profile_image_90:
          description: Profile image (90x90)
          type: string
    SharedOrganization:
      description: The organization the resource belongs to
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        slug:
          type: string
        profile_image:
          description: Profile image (640x640)
          type: string
          format: url
        profile_image_90:
          description: Profile image (90x90)
          type: string
          format: url
